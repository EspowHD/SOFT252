/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels.Parts;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.SpinnerNumberModel;
import patientmanagementsystem.PatientManagementSystem;
/**
 *
 * @author espow
 */
public class DateSelectPart extends javax.swing.JPanel {
    Date date = null;
    Date min;
    Date max;
    public DateSelectPart(Date min,Date max) {
        this.min = min;
        this.max = max;
        initComponents();
        updateDate();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LblPickDate = new javax.swing.JLabel();
        SpinMonth = new javax.swing.JSpinner();
        SpinYear = new javax.swing.JSpinner();
        SpinDay = new javax.swing.JSpinner();
        LblSlash = new javax.swing.JLabel();
        LblSlash1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(170, 60));
        setMinimumSize(new java.awt.Dimension(170, 60));
        setPreferredSize(new java.awt.Dimension(170, 60));
        setLayout(new java.awt.GridBagLayout());

        LblPickDate.setFont(PatientManagementSystem.getTextFont());
        LblPickDate.setText("Pick Date:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(LblPickDate, gridBagConstraints);

        SpinMonth.setFont(PatientManagementSystem.getTextFont());
        SpinMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        SpinMonth.setEditor(new javax.swing.JSpinner.NumberEditor(SpinMonth, ""));
        SpinMonth.setPreferredSize(new java.awt.Dimension(40, 22));
        SpinMonth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinMonthStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(SpinMonth, gridBagConstraints);

        SpinYear.setFont(PatientManagementSystem.getTextFont());
        SpinYear.setModel(new SpinnerNumberModel(1900+ min.getYear(),1900+ min.getYear(),1900+ max.getYear(),1));
        SpinYear.setEditor(new javax.swing.JSpinner.NumberEditor(SpinYear, ""));
        SpinYear.setPreferredSize(new java.awt.Dimension(60, 22));
        SpinYear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinYearStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(SpinYear, gridBagConstraints);

        SpinDay.setFont(PatientManagementSystem.getTextFont());
        SpinDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        SpinDay.setEditor(new javax.swing.JSpinner.NumberEditor(SpinDay, ""));
        SpinDay.setMinimumSize(new java.awt.Dimension(40, 22));
        SpinDay.setPreferredSize(new java.awt.Dimension(40, 22));
        SpinDay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinDayStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(SpinDay, gridBagConstraints);

        LblSlash.setFont(PatientManagementSystem.getTextFont());
        LblSlash.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(LblSlash, gridBagConstraints);

        LblSlash1.setFont(PatientManagementSystem.getTextFont());
        LblSlash1.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(LblSlash1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void SpinMonthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinMonthStateChanged
        setDayToValid();
    }//GEN-LAST:event_SpinMonthStateChanged

    private void SpinYearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinYearStateChanged
        setDayToValid();
    }//GEN-LAST:event_SpinYearStateChanged

    private void SpinDayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinDayStateChanged
        setDayToValid();
    }//GEN-LAST:event_SpinDayStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblPickDate;
    private javax.swing.JLabel LblSlash;
    private javax.swing.JLabel LblSlash1;
    private javax.swing.JSpinner SpinDay;
    private javax.swing.JSpinner SpinMonth;
    private javax.swing.JSpinner SpinYear;
    // End of variables declaration//GEN-END:variables

    private boolean checkDateValid(){
        boolean result = false;
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date(this.SpinMonth.getValue().toString()+"/"+this.SpinDay.getValue().toString()+"/"+this.SpinYear.getValue().toString());
        if((String.format("%02d", (int) this.SpinDay.getValue())+"/"+String.format("%02d", (int) this.SpinMonth.getValue())+"/"+this.SpinYear.getValue().toString()).equals(dateFormat.format(date))) return true;
        else return result;
    }
    
    private void setDayToValid(){
        if(!checkDateValid()){
            int month = (int) this.SpinMonth.getValue();
            if(month<=7){
                if(month == 2)
                    if( ((int) this.SpinYear.getValue()) %4 == 0) this.SpinDay.setValue(29);
                    else this.SpinDay.setValue(28);
                else if (month%2 == 0) this.SpinDay.setValue(30);
                else this.SpinDay.setValue(31);
            }
            else{
                if (month%2 == 0) this.SpinDay.setValue(31);
                else this.SpinDay.setValue(30);
            }
        }
        updateDate();
    }
    
    private void updateDate() {
        this.date = new Date(this.SpinYear.getValue().toString()+"/"+this.SpinMonth.getValue().toString()+"/"+this.SpinDay.getValue().toString()+" 00:00");
        if(date.after(max)){
            Calendar cal = Calendar.getInstance();
            cal.setTime(max);
            this.SpinYear.setValue(cal.get(Calendar.YEAR));
            this.SpinMonth.setValue(cal.get(Calendar.MONTH)+1);
            this.SpinDay.setValue(cal.get(Calendar.DAY_OF_MONTH));
            this.date = new Date(this.SpinYear.getValue().toString()+"/"+this.SpinMonth.getValue().toString()+"/"+this.SpinDay.getValue().toString()+" 00:00");
        }
        if(date.before(min)){
            Calendar cal = Calendar.getInstance();
            cal.setTime(min);
            this.SpinYear.setValue(cal.get(Calendar.YEAR));
            this.SpinMonth.setValue(cal.get(Calendar.MONTH)+1);
            this.SpinDay.setValue(cal.get(Calendar.DAY_OF_MONTH));
            this.date = new Date(this.SpinYear.getValue().toString()+"/"+this.SpinMonth.getValue().toString()+"/"+this.SpinDay.getValue().toString()+" 00:00");
        }
        validate();
    }
    
    public Date getDate() {
        return this.date;
    }
}
