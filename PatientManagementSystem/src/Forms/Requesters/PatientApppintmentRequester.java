/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.Requesters;

import Forms.HomePages.PatientHomePage;
import Forms.HomePages.SecretaryHomePage;
import java.util.Date;
import Objects.Appointment;
import patientmanagementsystem.PatientManagementSystem;
import patientmanagementsystem.UserTypes.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author espow
 */
public class PatientApppintmentRequester extends javax.swing.JFrame {
    PatientHomePage php;
    public PatientApppintmentRequester(PatientHomePage php) {
        this.php = php;
        initComponents();
        this.LblPatientName.setText(this.LblPatientName.getText()+this.php.getPatient().getFirstName()+" "+this.php.getPatient().getLastName());
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LblPatientName = new javax.swing.JLabel();
        pnlAppointmentMaker1 = new Panels.PnlAppointmentMaker();
        BtnCancel = new javax.swing.JButton();
        BtnRequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Request an Appointment");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(600, 300));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        LblPatientName.setFont(PatientManagementSystem.getTextFont());
        LblPatientName.setText("Patient: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        getContentPane().add(LblPatientName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        getContentPane().add(pnlAppointmentMaker1, gridBagConstraints);

        BtnCancel.setFont(PatientManagementSystem.getTextFont());
        BtnCancel.setText("Cancel");
        BtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 75, 10, 0);
        getContentPane().add(BtnCancel, gridBagConstraints);

        BtnRequest.setFont(PatientManagementSystem.getTextFont());
        BtnRequest.setText("Request this Appoinment");
        BtnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRequestActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 75);
        getContentPane().add(BtnRequest, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnCancelActionPerformed

    private void BtnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRequestActionPerformed
        try{
            Doctor doctor = null;
            for (int i = 0; i < PatientManagementSystem.getUsers().size(); i++) {
                User user = PatientManagementSystem.getUsers().get(i);
                if(user.getUniqueID().contains("D")){
                if(this.pnlAppointmentMaker1.CoBoDoctorSelector.getSelectedItem().toString().contains(PatientManagementSystem.getUsers().get(i).getFirstName()) &&
                    this.pnlAppointmentMaker1.CoBoDoctorSelector.getSelectedItem().toString().contains(PatientManagementSystem.getUsers().get(i).getLastName())){
                    doctor = (Doctor) user;
                }
            }
            }
            if(!checkIfBusy(this.php.getPatient(),doctor,this.pnlAppointmentMaker1.getDate())){
                ArrayList<Appointment> appointments = PatientManagementSystem.getAppointments();
                appointments.add(new Appointment(this.php.getPatient(),doctor,"Request",this.pnlAppointmentMaker1.getDate()));
                PatientManagementSystem.setAppointments(appointments);
                this.php.updateAppointmentsList(php.getPatient().getAppointments());
                PatientManagementSystem.saveInformation(PatientManagementSystem.getFile());
                dispose();
            }
            else{
                JOptionPane.showMessageDialog(null, "The doctor or patient is busy\nat this time");
            }
        } catch (Exception e){
        }
    }//GEN-LAST:event_BtnRequestActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancel;
    private javax.swing.JButton BtnRequest;
    private javax.swing.JLabel LblPatientName;
    private Panels.PnlAppointmentMaker pnlAppointmentMaker1;
    // End of variables declaration//GEN-END:variables

    private boolean checkIfBusy(Patient patient, Doctor doctor, Date date) {
        boolean busy = false;
        for (Appointment appointment : PatientManagementSystem.getAppointments()) {
            if (appointment.getDoctor() == doctor || appointment.getPatient() == patient){
                if(appointment.getDateTime().equals(date)) busy = true;
            }
        }
        return busy;
    }

    private void requesterClose() {
        php.updateAppointmentsList(php.getPatient().getAppointments());
        this.dispose();
    }
}
